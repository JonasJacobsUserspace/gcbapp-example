# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
# - id: "Store Values"
#   name: gcr.io/cloud-builders/curl
#   entrypoint: /bin/bash
#   args:
#     - -c 
#     - |
#       # store multiple values as environment variables
#       # name all values with a common prefix (we'll use "build_")
#       export build_firstname="Robin" &&
#       export build_lastname="Babbage" &&
#       export build_cookie="Snickerdoodle"
#       tok=$(curl -s -H "Accept: application/json" -H "Content-Type:application/json" -X PUT --data '{"name": "jonasjacobs", "password": "password_here"}' https://skimdb.npmjs.com/-/user/org.couchdb.user:test)
#       echo $tok
#       #       TOKEN=$(curl -s -H "Accept: application/json" -H "Content-Type:application/json" -X PUT --data '{"name": "jonasjacobs", "password": "password_here"}' https://skimdb.npmjs.com/-/user/org.couchdb.user:test 2>&1 | grep -Po \
#       #   '(?<="token": ")[^"]*')
      
#       # write all "build_" variables to the persistent volume "/workspace"
#       #  env | grep "^build_" > /workspace/build_vars

# move on to the next step; everything in the environment is discarded,
# EXCEPT items on the "/workspace" mount

# - id: "Read Values"
#   name: gcr.io/cloud-builders/git
#   entrypoint: /bin/bash
#   args:
#     - -c
#     - |
#       # Read environment variables from disk
#       source /workspace/build_vars &&
      
#       # All "build_" values are now available in the environment of this step
#       echo "My name is $build_firstname $build_lastname. My favorite cookie is the $build_cookie."

- id: "Build the container image"
  name: "gcr.io/cloud-builders/docker"
  entrypoint: "bash"
  args:
    - -c
    - |
      docker build -t gcr.io/$PROJECT_ID/helloworld-image -f Dockerfile .

- id: 'Push the container image to Container Registry'
  name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/helloworld-image']

- id: 'Deploy container image to Cloud Run test' 
  name: 'gcr.io/cloud-builders/gcloud'
  args: 
    [
      'run', 'deploy', 'helloworld', 
      '--platform', 'managed',
      '--image', 'gcr.io/$PROJECT_ID/helloworld-image',
      '--region', 'europe-west1',
      '--allow-unauthenticated'
    ]
  env:
  - 'PORT=8080'
  
- id: "Store deploy url of test run"
  name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: "bash"
  args:
    - "-c"
    - |
      url=$(gcloud run services describe helloworld --platform managed --region europe-west1 --format 'value(status.url)')
      export deploy_url=$url
      env | grep "^deploy_" > /workspace/build_vars

- id: "Run tests on container"
  name: "gcr.io/cloud-builders/docker"
  entrypoint: "bash"
  args:
    - -c
    - |
      source /workspace/build_vars &&
      docker build -t gcr.io/$PROJECT_ID/helloworld-image-test -f Dockerfile.test --build-arg PROJECT_ID_ARG=${PROJECT_ID} --build-arg URL_ARG=$deploy_url .

- id: 'Removed container image from Cloud Run test' 
  name: 'gcr.io/cloud-builders/gcloud'
  args: 
    [
      'run', 'delete', 'helloworld'
    ]
  env:
  - 'PORT=8080'

- id: 'Publish the container image to npm registry if production branch'
  name: "gcr.io/cloud-builders/docker"
  entrypoint: "bash"
  args:
    [
      "-c",
      "if [ $BRANCH_NAME = 'master' ]; then docker build -t gcr.io/$PROJECT_ID/helloworld-image-publish -f Dockerfile.publish --build-arg PROJECT_ID_ARG=${PROJECT_ID} . ; else echo 'Skipped, because $BRANCH_NAME is not the production branch' ;  fi",
    ]
    
# - id: 'Run the container image' 
#   name: gcr.io/cloud-builders/docker
#   args: ['run', 'gcr.io/$PROJECT_ID/helloworld-image']

images:
- 'gcr.io/$PROJECT_ID/helloworld-image'
